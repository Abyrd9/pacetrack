/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as AppRouteImport } from './routes/_app'
import { Route as AuthIndexRouteImport } from './routes/auth.index'
import { Route as AppIndexRouteImport } from './routes/_app.index'
import { Route as CallbackConfirmEmailChangeRouteImport } from './routes/callback.confirm-email-change'
import { Route as AuthSignUpRouteImport } from './routes/auth.sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth.sign-in'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth.forgot-password'
import { Route as AppSettingsRouteImport } from './routes/_app.settings'
import { ServerRoute as CallbackIndexServerRouteImport } from './routes/callback.index'
import { ServerRoute as ApiHealthcheckServerRouteImport } from './routes/api.healthcheck'

const rootServerRouteImport = createServerRootRoute()

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const CallbackConfirmEmailChangeRoute =
  CallbackConfirmEmailChangeRouteImport.update({
    id: '/callback/confirm-email-change',
    path: '/callback/confirm-email-change',
    getParentRoute: () => rootRouteImport,
  } as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)
const AppSettingsRoute = AppSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)
const CallbackIndexServerRoute = CallbackIndexServerRouteImport.update({
  id: '/callback/',
  path: '/callback/',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiHealthcheckServerRoute = ApiHealthcheckServerRouteImport.update({
  id: '/api/healthcheck',
  path: '/api/healthcheck',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRouteWithChildren
  '/settings': typeof AppSettingsRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/callback/confirm-email-change': typeof CallbackConfirmEmailChangeRoute
  '/': typeof AppIndexRoute
  '/auth/': typeof AuthIndexRoute
}
export interface FileRoutesByTo {
  '/settings': typeof AppSettingsRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/callback/confirm-email-change': typeof CallbackConfirmEmailChangeRoute
  '/': typeof AppIndexRoute
  '/auth': typeof AuthIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/_app/settings': typeof AppSettingsRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/callback/confirm-email-change': typeof CallbackConfirmEmailChangeRoute
  '/_app/': typeof AppIndexRoute
  '/auth/': typeof AuthIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/settings'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/callback/confirm-email-change'
    | '/'
    | '/auth/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/settings'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/callback/confirm-email-change'
    | '/'
    | '/auth'
  id:
    | '__root__'
    | '/_app'
    | '/auth'
    | '/_app/settings'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/callback/confirm-email-change'
    | '/_app/'
    | '/auth/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  CallbackConfirmEmailChangeRoute: typeof CallbackConfirmEmailChangeRoute
}
export interface FileServerRoutesByFullPath {
  '/api/healthcheck': typeof ApiHealthcheckServerRoute
  '/callback': typeof CallbackIndexServerRoute
}
export interface FileServerRoutesByTo {
  '/api/healthcheck': typeof ApiHealthcheckServerRoute
  '/callback': typeof CallbackIndexServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/healthcheck': typeof ApiHealthcheckServerRoute
  '/callback/': typeof CallbackIndexServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/healthcheck' | '/callback'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/healthcheck' | '/callback'
  id: '__root__' | '/api/healthcheck' | '/callback/'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiHealthcheckServerRoute: typeof ApiHealthcheckServerRoute
  CallbackIndexServerRoute: typeof CallbackIndexServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/'
      fullPath: '/auth/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/callback/confirm-email-change': {
      id: '/callback/confirm-email-change'
      path: '/callback/confirm-email-change'
      fullPath: '/callback/confirm-email-change'
      preLoaderRoute: typeof CallbackConfirmEmailChangeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsRouteImport
      parentRoute: typeof AppRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/callback/': {
      id: '/callback/'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/healthcheck': {
      id: '/api/healthcheck'
      path: '/api/healthcheck'
      fullPath: '/api/healthcheck'
      preLoaderRoute: typeof ApiHealthcheckServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AppRouteChildren {
  AppSettingsRoute: typeof AppSettingsRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppSettingsRoute: AppSettingsRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  CallbackConfirmEmailChangeRoute: CallbackConfirmEmailChangeRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiHealthcheckServerRoute: ApiHealthcheckServerRoute,
  CallbackIndexServerRoute: CallbackIndexServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
