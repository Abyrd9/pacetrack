/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as AppRouteImport } from './routes/_app'
import { Route as CallbackIndexRouteImport } from './routes/callback.index'
import { Route as AuthIndexRouteImport } from './routes/auth.index'
import { Route as AppIndexRouteImport } from './routes/_app.index'
import { Route as CallbackConfirmEmailChangeRouteImport } from './routes/callback.confirm-email-change'
import { Route as AuthSignUpRouteImport } from './routes/auth.sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth.sign-in'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth.forgot-password'
import { Route as ApiHealthcheckRouteImport } from './routes/api.healthcheck'
import { Route as AppSettingsRouteImport } from './routes/_app.settings'

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const CallbackIndexRoute = CallbackIndexRouteImport.update({
  id: '/callback/',
  path: '/callback/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const CallbackConfirmEmailChangeRoute =
  CallbackConfirmEmailChangeRouteImport.update({
    id: '/callback/confirm-email-change',
    path: '/callback/confirm-email-change',
    getParentRoute: () => rootRouteImport,
  } as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)
const ApiHealthcheckRoute = ApiHealthcheckRouteImport.update({
  id: '/api/healthcheck',
  path: '/api/healthcheck',
  getParentRoute: () => rootRouteImport,
} as any)
const AppSettingsRoute = AppSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRouteWithChildren
  '/settings': typeof AppSettingsRoute
  '/api/healthcheck': typeof ApiHealthcheckRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/callback/confirm-email-change': typeof CallbackConfirmEmailChangeRoute
  '/': typeof AppIndexRoute
  '/auth/': typeof AuthIndexRoute
  '/callback': typeof CallbackIndexRoute
}
export interface FileRoutesByTo {
  '/settings': typeof AppSettingsRoute
  '/api/healthcheck': typeof ApiHealthcheckRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/callback/confirm-email-change': typeof CallbackConfirmEmailChangeRoute
  '/': typeof AppIndexRoute
  '/auth': typeof AuthIndexRoute
  '/callback': typeof CallbackIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/_app/settings': typeof AppSettingsRoute
  '/api/healthcheck': typeof ApiHealthcheckRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/callback/confirm-email-change': typeof CallbackConfirmEmailChangeRoute
  '/_app/': typeof AppIndexRoute
  '/auth/': typeof AuthIndexRoute
  '/callback/': typeof CallbackIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/settings'
    | '/api/healthcheck'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/callback/confirm-email-change'
    | '/'
    | '/auth/'
    | '/callback'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/settings'
    | '/api/healthcheck'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/callback/confirm-email-change'
    | '/'
    | '/auth'
    | '/callback'
  id:
    | '__root__'
    | '/_app'
    | '/auth'
    | '/_app/settings'
    | '/api/healthcheck'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/callback/confirm-email-change'
    | '/_app/'
    | '/auth/'
    | '/callback/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  ApiHealthcheckRoute: typeof ApiHealthcheckRoute
  CallbackConfirmEmailChangeRoute: typeof CallbackConfirmEmailChangeRoute
  CallbackIndexRoute: typeof CallbackIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/callback/': {
      id: '/callback/'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/'
      fullPath: '/auth/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/callback/confirm-email-change': {
      id: '/callback/confirm-email-change'
      path: '/callback/confirm-email-change'
      fullPath: '/callback/confirm-email-change'
      preLoaderRoute: typeof CallbackConfirmEmailChangeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/api/healthcheck': {
      id: '/api/healthcheck'
      path: '/api/healthcheck'
      fullPath: '/api/healthcheck'
      preLoaderRoute: typeof ApiHealthcheckRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppSettingsRoute: typeof AppSettingsRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppSettingsRoute: AppSettingsRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  ApiHealthcheckRoute: ApiHealthcheckRoute,
  CallbackConfirmEmailChangeRoute: CallbackConfirmEmailChangeRoute,
  CallbackIndexRoute: CallbackIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
